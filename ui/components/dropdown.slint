// SPDX-FileCopyrightText: 2025 Spencer
// SPDX-License-Identifier: AGPL-3.0-only

import { DropdownOption } from "../structs/dropdown_option.slint";
import { ThemeLogic } from "../logic/theme.slint";

component ForEach {}

export component Dropdown {
  in property <bool> enabled: true;
  in property <[DropdownOption]> options: [];
  in property <string> placeholder: @tr("Select an optionâ€¦");
  in-out property <string> value: "";
  out property <string> label: "";
  out property <bool> expanded <=> dropdown_menu.visible;
  callback changed(string);

  for option in root.options: ForEach {
    init => {
      if root.value == option.value {
        root.label = option.label;
      }
    }
  }

  Rectangle {
    background: ThemeLogic.colors.surface;
    opacity: root.enabled ? 100% : 50%;
    border-radius: 4px;
    border-width: 1px;
    border-color: ThemeLogic.colors.surface_border;
    drop-shadow-blur: 8px;
    drop-shadow-color: ThemeLogic.colors.surface_shadow;
    drop-shadow-offset-y: 4px;
    accessible-role: button;
    accessible-enabled: root.enabled;
    accessible-expandable: true;
    accessible-expanded: root.expanded;
    accessible-label: root.label.is-empty ? root.placeholder : root.label;

    HorizontalLayout {
      padding-left: 12px;
      padding-right: 8px;
      spacing: 8px;
      alignment: space-between;

      Text {
        private property <bool> show_label: !root.label.is-empty;
        text: show_label ? root.label : root.placeholder;
        color: show_label ? ThemeLogic.colors.text_primary : ThemeLogic.colors.text_placeholder;
        opacity: show_label ? 65% : 40%;
        font-family: "Inter";
        font-size: 14px;
        font-weight: 400;
        overflow: elide;
        vertical-alignment: center;
      }

      Image {
        source: @image-url("../assets/arrow_drop_down.svg");
        colorize: ThemeLogic.colors.primary;
        rotation-angle: root.expanded ? 180deg : 0deg;
        vertical-alignment: center;

        animate rotation-angle { duration: 200ms; easing: ease-in-out; }
      }
    }

    TouchArea {
      enabled: root.enabled;
      mouse-cursor: pointer;
      clicked => { root.expanded = !root.expanded; }
    }
  }

  dropdown_menu := Rectangle {
    y: root.height + 4px;
    width: root.width;
    height: min(200px, (root.height * root.options.length) + 4px);
    visible: false;
    background: ThemeLogic.colors.surface;
    border-radius: 4px;
    border-width: 1px;
    border-color: ThemeLogic.colors.border_hover;
    drop-shadow-blur: 12px;
    drop-shadow-color: ThemeLogic.colors.dropdown_shadow;
    drop-shadow-offset-y: 6px;
    accessible-role: list;
    accessible-label: @tr("Dropdown options");

    Flickable {
      width: 100%;
      height: 100%;

      VerticalLayout {
        width: 100%;
        spacing: 4px;
        padding: 4px;

        for option[index] in root.options: Rectangle {
          private property <bool> is_current_value: option.value == root.value;
          width: 100%;
          height: 32px;
          background: touch_area.has-hover ? ThemeLogic.colors.surface_hover :
                      is_current_value ? ThemeLogic.colors.surface_selected :
                      transparent;
          border-radius: 2px;
          accessible-role: button;
          accessible-label: option.label;
          accessible-item-selected: is_current_value;

          animate background { duration: 100ms; easing: ease-in-out; }

          HorizontalLayout {
            width: 100%;
            padding-left: 8px;
            padding-right: 4px;

            Text {
              text: option.label;
              color: ThemeLogic.colors.text_primary;
              opacity: is_current_value ? 100% : 65%;
              font-family: "Inter";
              font-size: 14px;
              font-weight: 400;
              overflow: elide;
              horizontal-stretch: 1;
              vertical-alignment: center;
            }

            if is_current_value: Image {
              source: @image-url("../assets/checkmark.svg");
              colorize: ThemeLogic.colors.primary;
              vertical-alignment: center;
              accessible-label: @tr("Selected");
            }
          }

          touch_area := TouchArea {
            width: 100%;
            height: 100%;
            mouse-cursor: pointer;
            clicked => {
              root.expanded = false;
              if !is_current_value {
                root.value = option.value;
                root.label = option.label;
                root.changed(option.value);
              }
            }
          }
        }
      }
    }
  }
}
