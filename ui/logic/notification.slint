// SPDX-FileCopyrightText: 2025 Spencer
// SPDX-License-Identifier: AGPL-3.0-only

import { NotificationType } from "../components/notification.slint";

export global NotificationLogic {
  callback show_notification(string, NotificationType);

  private property <bool> notification_visible;
  private property <string> notification_message;
  private property <NotificationType> notification_type: NotificationType.INFO;

  public function show_success(message: string) {
    NotificationLogic.show_notification(message, NotificationType.SUCCESS);
  }

  public function show_error(message: string) {
    NotificationLogic.show_notification(message, NotificationType.ERROR);
  }

  public function show_info(message: string) {
    NotificationLogic.show_notification(message, NotificationType.INFO);
  }

  public function show_warning(message: string) {
    NotificationLogic.show_notification(message, NotificationType.WARNING);
  }

  pure function translate(key: string) -> string {
    key == "STEAM_ACCOUNT_MISSING" ? @tr("Set your Steam account in settings.")
      : key == "BACKUP_DIRECTORY_MISSING" ? @tr("Backup directory does not exist.")
      : key == "SAVED_SETTINGS" ? @tr("Successfully saved settings.")
      : key == "GAMEDB_UPDATED" ? @tr("Successfully updated GameDB.")
      : key == "GAMEDB_UP_TO_DATE" ? @tr("GameDB is already up to date.")
      : key == "GAMEDB_UPDATE_FAILED" ? @tr("Failed to update GameDB.")
      : key
  }

  show_notification(message, type) => {
    notification_message = translate(message);
    notification_type = type;
    notification_visible = true;
  }

  public function hide_notification() {
    notification_visible = false;
  }

  out property <bool> is_notification_visible: notification_visible;
  out property <string> current_notification_message: notification_message;
  out property <NotificationType> current_notification_type: notification_type;
}
